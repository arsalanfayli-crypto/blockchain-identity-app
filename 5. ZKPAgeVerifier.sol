// SPDX-License-Identifier: MIT
pragma solidity ^0.8.18;

// Interface for ZKP Verifier contract (generated by Zokrates/snarkjs)
interface IZKPVerifier {
    function verifyProof(
        uint[2] memory a,
        uint[2][2] memory b,
        uint[2] memory c,
        uint[1] memory input // e.g., "is over 18"
    ) external returns (bool);
}

contract ZKPAgeVerifier {
    IZKPVerifier public verifierContract;

    constructor(address verifierAddress) {
        verifierContract = IZKPVerifier(verifierAddress);
    }

    function submitAgeProof(
        uint[2] memory a,
        uint[2][2] memory b,
        uint[2] memory c,
        uint[1] memory input
    ) public returns (bool) {
        // input[0] == 1 means "user is over 18"
        bool valid = verifierContract.verifyProof(a, b, c, input);
        require(valid, "Invalid ZKP proof");
        // You can emit events or update record status here.
        return true;
    }
}
